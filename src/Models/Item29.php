<?php 
/*
 * LandedCostCalculationAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace LandedCostCalculationAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class Item29 implements JsonSerializable {
    /**
     * Description of the product
     * @required
     * @var string $description public property
     */
    public $description;

    /**
     * The harmonized classification code of the product
     * @required
     * @var string $hsCode public property
     */
    public $hsCode;

    /**
     * Transaction line number
     * @required
     * @var string $id public property
     */
    public $id;

    /**
     * @todo Write general description for this property
     * @required
     * @var Rates $rates public property
     */
    public $rates;

    /**
     * @todo Write general description for this property
     * @required
     * @var TaxesAndFees $taxesAndFees public property
     */
    public $taxesAndFees;

    /**
     * The discount to apply at the shipment level
     * @var Discount $discount public property
     */
    public $discount;

    /**
     * Extended price (price * quantity) of the item shipped
     * @var double $extendedPrice public property
     */
    public $extendedPrice;

    /**
     * Original price of the product, returned if a discount was applied on the item
     * @var double $netPrice public property
     */
    public $netPrice;

    /**
     * Included when a shipment item qualifies for a special rate, such as NAFTA
     * @var string $preferenceProgram public property
     */
    public $preferenceProgram;

    /**
     * Item price of the product
     * @var double $price public property
     */
    public $price;

    /**
     * Quantity of the item shipped
     * @var double $quantity public property
     */
    public $quantity;

    /**
     * @todo Write general description for this property
     * @var array $taxExemptions public property
     */
    public $taxExemptions;

    /**
     * Collection of units of measure used to calculate applicable taxes and fees
     * @var Unit[] $units public property
     */
    public $units;

    /**
     * Constructor to set initial or default values of member properties
     * @param   string            $description         Initialization value for the property $this->description      
     * @param   string            $hsCode              Initialization value for the property $this->hsCode           
     * @param   string            $id                  Initialization value for the property $this->id               
     * @param   Rates             $rates               Initialization value for the property $this->rates            
     * @param   TaxesAndFees      $taxesAndFees        Initialization value for the property $this->taxesAndFees     
     * @param   Discount          $discount            Initialization value for the property $this->discount         
     * @param   double            $extendedPrice       Initialization value for the property $this->extendedPrice    
     * @param   double            $netPrice            Initialization value for the property $this->netPrice         
     * @param   string            $preferenceProgram   Initialization value for the property $this->preferenceProgram
     * @param   double            $price               Initialization value for the property $this->price            
     * @param   double            $quantity            Initialization value for the property $this->quantity         
     * @param   array             $taxExemptions       Initialization value for the property $this->taxExemptions    
     * @param   array             $units               Initialization value for the property $this->units            
     */
    public function __construct()
    {
        if(13 == func_num_args())
        {
            $this->description       = func_get_arg(0);
            $this->hsCode            = func_get_arg(1);
            $this->id                = func_get_arg(2);
            $this->rates             = func_get_arg(3);
            $this->taxesAndFees      = func_get_arg(4);
            $this->discount          = func_get_arg(5);
            $this->extendedPrice     = func_get_arg(6);
            $this->netPrice          = func_get_arg(7);
            $this->preferenceProgram = func_get_arg(8);
            $this->price             = func_get_arg(9);
            $this->quantity          = func_get_arg(10);
            $this->taxExemptions     = func_get_arg(11);
            $this->units             = func_get_arg(12);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['description']       = $this->description;
        $json['hsCode']            = $this->hsCode;
        $json['id']                = $this->id;
        $json['rates']             = $this->rates;
        $json['taxesAndFees']      = $this->taxesAndFees;
        $json['discount']          = $this->discount;
        $json['extendedPrice']     = $this->extendedPrice;
        $json['netPrice']          = $this->netPrice;
        $json['preferenceProgram'] = $this->preferenceProgram;
        $json['price']             = $this->price;
        $json['quantity']          = $this->quantity;
        $json['taxExemptions']     = $this->taxExemptions;
        $json['units']             = $this->units;

        return $json;
    }
}